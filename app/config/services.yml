# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    AppBundle\EventListener\LogRegister:
        arguments:
            - "@security.token_storage"
        tags:
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postUpdate }

    AppBundle\EventListener\CallIncoming:
        arguments:
            - "@twilio.api"
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    AppBundle\EventListener\UserRegister:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    AppBunle\EventListener\AsignarProvilegiosPrimerusuarioSubscriber:
        autowire: true
        tags:
            - { name: kernell.event_subscriber }

#    AppBundle\EventListener\MessageIncoming:
#        tags:
#            - { name: doctrine.event_listener, event: postPersist }

