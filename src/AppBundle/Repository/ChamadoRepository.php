<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Cliente;
use AppBundle\Entity\Status;
use AppBundle\Entity\Tecnico;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * ChamadoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChamadoRepository extends EntityRepository
{
    public function findAllFull()
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT ch, t, s, c
                                FROM AppBundle:Chamado ch
                                JOIN ch.status s
                                JOIN ch.tecnicos t
                                JOIN ch.cliente c
                                ');
        return $consulta->getResult();
    }

    /**
     * @param $usuario
     * @return array
     */
    public function findAllByUser($usuario)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, t, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                JOIN c.tecnicos t
                                WHERE t.username = :usuario
                                AND c.status != 6
                                ');
        $consulta->setParameter('usuario', $usuario);
        return $consulta->getResult();
    }

    /**
     * @param $cliente
     * @return array
     */
    public function findAllByCliente($cliente)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                WHERE c.cliente = :cliente
                                ');
        $consulta->setParameter('cliente', $cliente);
        return $consulta->getResult();
    }

    /**
     * @param $cliente
     * @return array
     */
    public function findAllByClienteBetween($empresa, $desde, $hasta)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                WHERE c.empresa LIKE :empresa
                                AND c.data > :desde
                                AND c.data < :hasta
                                ');
        $consulta->setParameter('empresa', '%'.$empresa.'%');
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    public function findAllByClienteBetweenGrafico($empresa, $desde = null, $hasta = '')
    {
        if ($desde == null) {
            $desde = new \DateTime('2015-01-01');
        }
        if ($hasta == '') {
            $hasta = new \DateTime('now');
        }
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT MONTH(c.data) AS mes, COUNT(c) AS qtd
                                FROM AppBundle:Chamado c
                                WHERE c.empresa LIKE :empresa
                                AND c.data > :desde
                                AND c.data < :hasta
                                GROUP BY mes
                                ');
        $consulta->setParameter('empresa', '%'.$empresa.'%');
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);

        return $consulta->getResult();
    }

    /**
     * @param $cliente
     * @return array
     */
    public function findEmpresaByCliente($cliente, $desde, $hasta)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                WHERE c.cliente = :cliente
                                AND c.data >= :desde
                                AND c.data <= :hasta
                                ');
        $consulta->setParameter('cliente', $cliente);
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    public function findEmpresaByClienteGrafico($cliente, $desde, $hasta)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT MONTH(c.data) AS mes, COUNT(c) AS qtd
                                FROM AppBundle:Chamado c
                                WHERE c.cliente = :cliente
                                AND c.data >= :desde
                                AND c.data <= :hasta
                                ORDER BY mes
                                ');
        $consulta->setParameter('cliente', $cliente);
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    /**
     * @param $usuario
     * @param DateTime $desde
     * @param DateTime $hasta
     * @return array
     */
    public function findChamadosByUser($usuario, \DateTime $desde = null, \DateTime $hasta = null)
    {
        if(!$desde){ $desde = new \DateTime('2016-01-01'); }
        if(!$hasta){ $hasta = new \DateTime('now'); }

        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                WHERE c.nome = :usuario
                                AND c.data > :desde
                                AND c.data < :hasta
                                ');
        $consulta->setParameter('usuario', $usuario);
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    /**
     * @param Cliente $empresa
     * @param \DateTime|null $desde
     * @param \DateTime|null $hasta
     * @return mixed
     */
    public function findChamadosByCliente(Cliente $empresa, \DateTime $desde = null, \DateTime $hasta = null)
    {
        if(!$desde){ $desde = new \DateTime('2016-01-01'); }
        if(!$hasta){ $hasta = new \DateTime('now'); }

        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                WHERE c.empresa LIKE :cliente
                                AND c.data > :desde
                                AND c.data < :hasta
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('cliente', '%'.$empresa.'%');
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    public function findChamadosByTecnico(Tecnico $tecnico, \DateTime $desde = null, \DateTime $hasta = null)
    {
        if(!$desde){ $desde = new \DateTime('2016-01-01'); }
        if(!$hasta){ $hasta = new \DateTime('now'); }

        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c 
                                WHERE c.tecnicos = :tecnico
                                AND c.data > :desde
                                AND c.data < :hasta
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('tecnico', $tecnico->getId());
        $consulta->setParameter('desde', $desde);
        $consulta->setParameter('hasta', $hasta);
        return $consulta->getResult();
    }

    /**
     * @param $usuario
     * @return array
     */
    public function findAllByAdmin($limite = 1000)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                WHERE c.status != 6
                                AND c.status != 4
                                ORDER BY c.data DESC
                                ');
        $consulta->setMaxResults($limite);
        return $consulta->getResult();
    }

//    public function findAllByAdmin()
//    {
//        $em = $this->getEntityManager();
//        $consulta = $em->createQuery('
//                                SELECT c, s
//                                FROM AppBundle:Chamado c
//                                JOIN c.status s
//                                WHERE c.status != 6
//                                ');
//        return $consulta->getResult();
//    }

    public function findTecnicos($chamado)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT IDENTITY(c.tecnicos)
                                FROM AppBundle:Chamado c
                                WHERE c.id = :chamado
                                ');
        $consulta->setParameter('chamado', $chamado);
        return $consulta->getArrayResult();
    }

    public function findAutorizado($chamado, $usuario)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c.id
                                FROM AppBundle:Chamado c
                                JOIN c.tecnicos t
                                WHERE c.id = :chamado
                                AND t.username = :usuario
                                ');
        $consulta->setParameter('chamado', $chamado);
        $consulta->setParameter('usuario', $usuario);
        return $consulta->getOneOrNullResult();
    }

    public function ultimosChamados($quantidade=3)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s, cl
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                JOIN c.cliente cl
                                WHERE c.status = 1
                                ORDER BY c.data DESC
                                ');
        $consulta->setMaxResults($quantidade);
        return $consulta->getArrayResult();
    }

    public function ultimosChamadosLength($quantidade=3)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT COUNT(c) AS qtd
                                FROM AppBundle:Chamado c
                                WHERE c.status = 1
                                ORDER BY c.data DESC
                                ');
        $consulta->setMaxResults($quantidade);
        return $consulta->getArrayResult();
    }

    public function ultimosChamadosUser($quantidade=3, $usuario)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c
                                FROM AppBundle:Chamado c
                                JOIN c.tecnicos t
                                WHERE t.username = :usuario
                                AND c.status = 1
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('usuario', $usuario);
        $consulta->setMaxResults($quantidade);
        return $consulta->getArrayResult();
    }


    public function chamadosFinalizados($usuario)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, t, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                JOIN c.tecnicos t
                                WHERE c.status = 6
                                AND t.username = :usuario
                                OR c.finalizado IS NULL 
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('usuario', $usuario);
        return $consulta->getArrayResult();
    }

    /*
     * Chamados Finalizados
     */
    public function chamadosAbertos()
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s, cl
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                JOIN c.cliente cl
                                WHERE c.status != 6
                                AND c.status != 4
                                ORDER BY c.id DESC
                                ');
        return $consulta->getResult();
    }

//    public function chamadosAbertos()
//    {
//        $q = $this->getEntityManager()->createQueryBuilder();
//        $q->select('ch.nome as nome','s.nome as status')
//            ->from('AppBundle:Chamado','ch')
//            ->join('AppBundle:Status', 's', 'WITH', 'n = s.nome')
//            ->join('AppBundle:Cliente', 'c', 'WITH', 'ds.language = ln')
//            ->where('p.id = :feature')
//            ->andWhere('ln.iso = :lang')
//            ->setParameter('lang', $locale)
//            ->setParameter('feature', $feature)
//            ->setMaxResults(1)
//        ;
//        $query = $q->getQuery();
//        $result = $query->getOneOrNullResult();
//
//        $result = $query->getArrayResult();
//    }

















    public function chamadosReprovados()
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT COUNT(c)
                                FROM AppBundle:Chamado c
                                WHERE c.status = 4
                                ORDER BY c.data DESC
                                ');
        return $consulta->getSingleScalarResult();
    }

    public function chamadosReprocadosAdmin($limite = 1000)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                WHERE c.status = 4
                                ORDER BY c.data DESC
                                ');
        $consulta->setMaxResults($limite);
        return $consulta->getResult();
    }

//    *************************************************
//               FINALIZADOS O REPROVADOS
//    *************************************************
    public function findAllChamados(Status $status, $limite = 1000)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                WHERE s.ativo = :ativo
                                OR s.slug = :status
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('status', $status->getSlug());
        $consulta->setParameter('ativo', $status->getAtivo());
        $consulta->setMaxResults($limite);
        return $consulta->getResult();
    }

    public function chamadosFinalAdmin($limite = 1000)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT c, s
                                FROM AppBundle:Chamado c
                                JOIN c.status s
                                WHERE s.ativo = 0
                                OR s.slug = :finalizado
                                ORDER BY c.data DESC
                                ');
        $consulta->setParameter('finalizado', 'finalizado');
        $consulta->setMaxResults($limite);
        return $consulta->getResult();
    }

    /**
     * @param $year
     * @return mixed
     */
    public function findAllByYear($year)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT MONTH(c.data) AS mes, COUNT(c) AS qtd
                                FROM AppBundle:Chamado c
                                WHERE YEAR(c.data) = :year
                                GROUP BY mes
                                ');
        $consulta->setParameter('year', $year);
        return $consulta->getResult();
    }

    public function findAllByYearAndClient($year, Cliente $empresa)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT MONTH(c.data) AS mes, COUNT(c) AS qtd
                                FROM AppBundle:Chamado c
                                WHERE YEAR(c.data) = :year
                                AND c.empresa LIKE :cliente
                                GROUP BY mes
                                ');
        $consulta->setParameter('year', $year);
        $consulta->setParameter('cliente', '%'.$empresa.'%');
        return $consulta->getResult();
    }

    public function findAllYearsXCliente(Cliente $empresa)
    {
        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
                                SELECT YEAR(c.data) AS ano
                                FROM AppBundle:Chamado c
                                WHERE c.empresa LIKE :cliente
                                GROUP BY ano
                                ');
        $consulta->setParameter('cliente', '%'.$empresa.'%');
        return $consulta->getResult();
    }
}
